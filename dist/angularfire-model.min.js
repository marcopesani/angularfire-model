!function(a){"use strict";a.module("marcopesani.ngFirebaseModelValidator").factory("$firebaseModelValidator",["$log",function(b){var c=function(a){return this instanceof c?(this.$$rules={},this.$$debug=a&&a.debug?a.debug:!1,this):new c(a)};return c.prototype={$addValidationRule:function(a,c,d){a&&c?(this.$$rules[a]={},this.$$rules[a].type=c,d&&(this.$$rules[a].options=d)):b.error("$firebaseModel.$addValidationRule requires the key to check and the rule to apply.")},$validate:function(b){function c(a,b){d.success=!1,d[a]=d[a]||[],d[a].push(b)}var d={success:!0};return a.forEach(this.$$rules,function(a,d){var e=a.type;switch(e){case"NotBlank":b[d]&&""!==b[d]||c(d,d+": This value should not be blank");break;case"Blank":b[d]&&""===b[d]||c(d,d+": This value should be blank");break;case"NotNull":b[d]||c(d,d+": This value should exists");break;case"Null":b[d]&&c(d,d+": This value should not exists");break;case"True":b[d]===!0&&c(d,d+": This value should be true");break;case"False":b[d]===!1&&c(d,d+": This value should be false");break;case"Type":}}),d}},c}])}(window.angular),function(a){"use strict";a.module("marcopesani.ngFirebaseModel",["firebase","marcopesani.ngFirebaseModel"]).factory("$firebaseModel",["$log","$q","$firebaseModelValidator","$firebaseArray","$firebaseObject",function(b,c,d,e,f){function g(a,b,c){return this instanceof g?(this.$$baseRef=c,this.$$modelRef=c.child(b),this.$$modelName=a,this.$$modelCollection=b,this.$$schema={},this.$$validator=d({debug:!0}),this):new g(a,b,c)}return g.prototype={$all:function(){return e(this.$$modelRef)},$one:function(a){var b=this.$$modelRef.child(a);return f(b)},$add:function(b){var d,e=this,f=c.defer(),g=this.$$validator.$validate(b);return g.success===!0?(d=this.$$modelRef.push(b),d.once("value",function(b){var c=b.exists()?b.val():null;c&&(a.forEach(c,function(a,c){e.$$schema[c]&&"relationship"===e.$$schema[c].type&&e.$$createRelationship(b.key(),a,e.$$schema[c])}),f.resolve(g))})):f.reject(g),f.promise},$isValid:function(a){var b=this.$$validator.$validate(a);return b.success},$remove:function(b){var c=this,d=this.$$modelRef.child(b);d.once("value",function(b){var e=b.exists()?b.val():null;e&&a.forEach(e,function(a,d){c.$$schema[d]&&"relationship"===c.$$schema[d].type&&c.$$removeRelationship(b.key(),a,c.$$schema[d])}),d.remove()})},$addRelationship:function(a,b){var c={type:"relationship",localType:b.localType,foreingType:b.foreingType,foreingCollection:b.foreingCollection};switch(c.foreingType){case"value":c.foreingKey=this.$$modelName;break;case"collection":c.foreingKey=this.$$modelCollection}return this.$$schema[a]=c,this},$addAttribute:function(a){var b={type:"attribute"};return this.$$schema[a]=b,this},$addValidationRule:function(a,b,c){return this.$$validator.$addValidationRule(a,b,c),this},$$createRelationship:function(c,d,e){var f=this,g=function(a,b,c){"value"===c.foreingType?f.$$baseRef.child(c.foreingCollection).child(b).child(c.foreingKey).set(a):"collection"===c.foreingType&&f.$$baseRef.child(c.foreingCollection).child(b).child(c.foreingKey).child(a).set(!0)};switch(e.localType){case"value":g(c,d,e);break;case"collection":a.forEach(d,function(a,b){g(c,b,e)});break;default:b.error("$firebaseModel.$$createRelationship can handle only string or objects.")}},$$removeRelationship:function(c,d,e){var f=this,g=function(a,b,c){"value"===c.foreingType?f.$$baseRef.child(c.foreingCollection).child(b).child(c.foreingKey).remove():"collection"===c.foreingType&&f.$$baseRef.child(c.foreingCollection).child(b).child(c.foreingKey).child(a).remove()};switch(e.localType){case"value":g(c,d,e);break;case"collection":a.forEach(d,function(a,b){g(c,b,e)});break;default:b.error("$firebaseModel.$$removeRelationship can handle only string or objects.")}}},g}])}(window.angular);